generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  playlists Playlist[] 
}

model Song {
  id        String   @id @default(uuid()) // UUID for string IDs
  title     String
  artist    String
  duration  String // e.g., "3:20"
  cover     String // e.g., "/images/blinding-lights.jpg"
  filePath  String // e.g., "/songs/blinding-lights.mp3"
  genre     String
  createdAt DateTime @default(now())

  playlists Playlist[] @relation("PlaylistSongs") 
  artistRef Artist?    @relation(fields: [artistId], references: [id])
  artistId  Int?
  liked    Boolean @default(false)
  likes     Int?      @default(0)//likes
  plays     Int?      @default(0)//Plays
}

model Playlist {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  songs     Song[]   @relation("PlaylistSongs") // ðŸ‘ˆ Many-to-many with explicit name
  createdAt DateTime @default(now())
}

model Artist {
  id    Int    @id @default(autoincrement())
  name  String
  cover String

  songs Song[] // ðŸ‘ˆ Back relation from Song
}
